
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Menu{
  id			Int 	 @id @default(autoincrement())
  name  		String 		
  description	String
  price			Int
  image			String
  RestaurantId	Int
  Restaurant  	Restaurant	@relation(fields: [RestaurantId	],references: [id])
  createdAt		DateTime @default(now())
  updatedAt		DateTime @default(now())
}

model User{
	id  		Int		@id @default(autoincrement())
	fullname	String 	
	email		String  @unique
	password	String
	contact		String
	address		String?
	city		String?
	country		String?
	profilePicture String?
	orders			Order[]
	Restaurants     Restaurant[]
	isVerified		Boolean  @default(false)
	resetToken		String?//to access for forgot passwrod page
	resetTokenExpiry		DateTime?
	refreshToken	String?//normal refresh token
	refreshTokenExpiry 		DateTime?
	verificationToken String//for otp verification 
	verificationTokenExpiry DateTime?
	admin			Boolean	 @default(false)
	lastLogin		DateTime @default(now())
	createdAt		DateTime @default(now())
	updatedAt		DateTime @default(now())
}
model Restaurant{
	id				Int				@id @default(autoincrement())
	userId			Int				
	user			User 			@relation(fields: [userId],references: [id])
	RestaurantName 	String
	city			String
	country			String
	deliveryTime	Int
	cuisines		String[]
	menus			Menu[]
	orders			Order[]
	imageUrl		String
}

model Order{
	id 				Int				@id @default(autoincrement())
	userId			Int
	user			User 			@relation(fields: [userId],references: [id])
	RestaurantId	 Int
	Restaurant       Restaurant		@relation(fields: [RestaurantId],references: [id])
	
	deliveryDetails	DeliveryDetails	 @relation(fields: [deliveryDetailsId],references: [id])
	deliveryDetailsId	Int			@unique
	cartItems			Item[]
	totalAmount			Int
	status				OrderStatus
	createdAt			DateTime			@default(now())
	updatedAt			DateTime			@default(now())

}
enum OrderStatus {
  pending
  confirmed
  preparing
  outfordelivery
  delivered
}
model DeliveryDetails{
	id			Int					@id @default(autoincrement())
	email		String
	address		String
	city		String
	order		Order?   			
}
model Item{
	id 			Int					@id @default(autoincrement())
	menuId		Int					
	image		String
	price		Int
	quantity	Int
	orderId		Int
	order		Order				@relation(fields: [orderId],references: [id])

}